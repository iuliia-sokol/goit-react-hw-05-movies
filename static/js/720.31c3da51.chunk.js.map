{"version":3,"file":"static/js/720.31c3da51.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","fetchAPI.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  border: ${props =>\n    props.status === 'search'\n      ? 'none'\n      : props.status === 'load'\n      ? '1px solid rgba(0, 128, 75, 0.7)'\n      : 'grey'};\n\n  background-color: ${props =>\n    props.status === 'search'\n      ? 'rgba(0, 128, 75, 0.7)'\n      : props.status === 'load'\n      ? 'transparent'\n      : 'grey'};\n\n  color: ${props =>\n    props.status === 'search'\n      ? 'hsla(0, 0%, 100%, 1)'\n      : props.status === 'load'\n      ? 'black'\n      : 'grey'};\n\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    color: white;\n    background-color: rgba(0, 128, 75, 0.7);\n    border: none;\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BtnElement } from './Button.styled';\nimport { Spinner } from 'react-bootstrap';\nimport '/node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nexport const Btn = ({\n  text,\n  status,\n  icon: Icon = null,\n  disabled = false,\n  type = 'button',\n  onClick = null,\n  onLoaderPlay,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {Icon && <Icon></Icon>}\n\n      {onLoaderPlay && (\n        <Spinner\n          as=\"span\"\n          variant=\"light\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n          animation=\"border\"\n        />\n      )}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 16px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: calc((100%-80px) / 6);\n  transform: scale(1);\n  border-radius: 12px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:hover > p {\n    opacity: 1;\n  }\n\n  img {\n    border-radius: 12px;\n    height: 100%;\n  }\n`;\n\nexport const MovieName = styled.p`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(16, 178, 108, 0.7);\n  border-radius: 12px;\n  font-size: 10px;\n  color: white;\n  font-weight: 500;\n  padding: 12px;\n  height: 30%;\n  opacity: 0;\n\n  & > span {\n    position: absolute;\n    bottom: -50%;\n    right: 0;\n    transform: translateY(-50%);\n    width: 40px;\n    background-color: rgba(228, 222, 30, 0.8);\n    padding: 10px;\n    border-radius: 12px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { fetchMovie } from '../../fetchAPI';\nimport { MovieListStyled, MovieListItem, MovieName } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(movie => {\n        // console.log(movie);\n        return (\n          <MovieListItem key={movie.id}>\n            <MovieName>\n              {movie.title} <span>{movie.vote_average.toFixed(2)}</span>\n            </MovieName>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `${fetchMovie.BASE_URL}${movie.poster_path}`\n                    : fetchMovie.defaultImg\n                }\n                alt={movie.title}\n                width=\"200\"\n              />\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = '663bd5fd8d905b7ce2d57e9867d3492e';\n\nexport class ThemoviedbAPI {\n  #API_KEY = KEY;\n\n  constructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n      'https://m.media-amazon.com/images/M/MV5BMTRkZGE0YWYtMDFhOS00N2I4LTljMTMtYjk0MTI2YmVhOTU4XkEyXkFqcGdeQXVyNjgxNzM0NDI@._V1_.jpg';\n  }\n\n  async getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    // console.log(data);\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n\n  //   async fetchTrailerById(id) {\n  //     const params = new URLSearchParams({\n  //       api_key: this.#API_KEY,\n  //     });\n  //     return await fetch(\n  //       `https://api.themoviedb.org/3/movie/${id}/videos?${params}`\n  //     ).then(response => {\n  //       if (!response.ok) {\n  //         throw new Error('Oops, there is no movie with that name');\n  //       }\n  //       return response.json();\n  //     });\n  //   }\n\n  //   async fetchGenres() {\n  //     const params = new URLSearchParams({\n  //       api_key: this.#API_KEY,\n  //     });\n  //     const allGenres = await axios.get('/genre/movie/list', { params });\n  //     this.genres = allGenres.data.genres;\n  //     return allGenres;\n  //   }\n}\n\nexport const fetchMovie = new ThemoviedbAPI();\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 30px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 16px;\n  margin-right: 36px;\n  border-radius: 12px;\n  border: 1px solid black;\n  width: 30vw;\n  border: 1px solid rgba(0, 128, 75, 0.7);\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  &:focus,\n  &:hover {\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n`;\n","import { BsSearch } from 'react-icons/bs';\nimport { Form, Input } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\nimport { Btn } from '../Button/Button';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { query } = e.target.elements;\n    onSubmit(query.value);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <Input type=\"text\" name=\"query\" />\n        </label>\n        <Btn type=\"submit\" icon={BsSearch} text=\"Search\" status=\"search\" />\n      </Form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieMain = styled.main`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchMovie } from '../../fetchAPI';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Btn } from '../../components/Button/Button';\nimport { MovieMain } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [page, setPage] = useState(1);\n  const [total_results, setTotalResults] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  const formSubmit = inputQuery => {\n    setPage(1);\n    setMovies([]);\n    setSearchParams(inputQuery !== '' ? { query: inputQuery } : {});\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    fetchMovie.getMovieByQuery(query, page).then(r => {\n      setMovies(prevMovie => [...prevMovie, ...r.results]);\n      setTotalResults(r.total_results);\n    });\n  }, [query, page]);\n\n  if (!movies) {\n    return;\n  }\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <MovieMain>\n      <SearchForm onSubmit={formSubmit} />\n      {query && <MovieList movies={movies} />}\n      {total_results / 12 >= page && (\n        <Btn text=\"Load more\" status=\"load\" onClick={loadMore} />\n      )}\n    </MovieMain>\n  );\n};\n\nexport default Movies;\n"],"names":["BtnElement","styled","props","status","Btn","text","icon","Icon","disabled","type","onClick","onLoaderPlay","Spinner","as","variant","size","role","animation","MovieListStyled","MovieListItem","MovieName","MovieList","movies","location","useLocation","map","movie","title","vote_average","toFixed","to","id","state","from","src","poster_path","fetchMovie","alt","width","axios","ThemoviedbAPI","this","BASE_URL","defaultImg","page","params","URLSearchParams","api_key","data","query","language","include_adult","fetch","then","response","ok","Error","json","cast","results","Form","Input","SearchForm","onSubmit","e","preventDefault","target","elements","value","reset","name","BsSearch","MovieMain","useState","setMovies","setPage","total_results","setTotalResults","useSearchParams","searchParams","setSearchParams","get","useEffect","r","prevMovie","inputQuery","prevPage"],"sourceRoot":""}